--allow-coverage-fail true
--anti-append-returngoto false
--anti-delete-cfgblock false
--anti-delete-empty false
--anti-delete-exit false
--anti-delete-setbeforeif false
--anti-delete-setinsideloop false
--appp 0.33333
--asm-code-only false
--best-edit-rule "1 * fault_loc_weight ; 1 * max_test_fail_prob ; -1 * num_tests"
--best-test-rule "1 * test_fail_prob ; 1 * test_fail_count ; -1 * test_pass_count"
--compiler "gcc"
--compiler-command "perl compile.pl __EXE_NAME__ > /dev/null"
--compiler-opts ""
--continue false
--coverage-info ""
--coverage-per-test false
--crossover "subset"
--crossp 0.5
--delp 0.33333
--describe-machine true
--diversity-selection 0
--edit-script false
--elf-risc false
--exclude-edits ""
--exp-diff false
--fault-file ""
--fault-path "coverage.path.neg"
--fault-scheme "path"
--fitness-in-parallel 2
--fix-file ""
--fix-oracle ""
--fix-path "coverage.path.pos"
--fix-scheme "default"
--flatten-path ""
--format "txt"
--gen-per-exchange 1
--generations 10
--gui false
--hostname "127.0.0.1"
--ignore-dead-code true
--ignore-equiv-appends true
--ignore-standard-headers true
--ignore-string-equiv-fixes true
--ignore-untyped-returns false
--incoming-pop ""
--keep-source false
--label-repair true
--max-evals 0
--minimization false
--mt-cov false
--multiopt-minimize false
--multiopt-no-inf false
--neg-tests 1
--neg-weight 1
--negative-test-weight 2
--neutral-walk-max-size 0
--neutral-walk-weight ""
--nht-id "global"
--nht-port 51000
--nht-server ""
--no-delete true
--no-rep-cache true
--no-test-cache true
--num-comps 2
--num-objectives 2
--oracle-genome ""
--popsize 40
--port 60000
--pos-tests 78
--pos-weight 0.1
--prefix "preprocessed"
--preprocessor ""
--print-incremental-evals false
--print-source-name false
--program "bugged-program.txt"
--promut 1
--quiet false
--regen-paths false
--rep "cilpatch"
--rep-cache "default.cache"
--repp 0
--samp-strat "variant"
--sample 1
--sample-runs 100
--sanity "no"
--search "ww"
--seed 0
--semantic-check "scope"
--single-fitness false
--skip-failed-sanity-tests true
--skip-tests ""
--split-search 0
--sport 65000
--subatom-constp 0.5
--subatom-mutp 0
--super-mutant false
--super-mutant-size 50
--swap-bug false
--swapp 0.33333
--template-cache ""
--templates ""
--test-command "timeout -k 75s 75s __TEST_SCRIPT__ __TEST_NAME__"
--test-script "./test.sh"
--tournament-size 2
--tweet false
--uniq false
--valgrind false
--variants-exchanged 50
uname -a: Linux genprog-shinhwei2 3.19.0-43-generic #49~14.04.1-Ubuntu SMP Thu Dec 31 15:44:49 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux
date: Mon Feb  1 00:16:46 SGT 2016
id: uid=1000(ubuntu) gid=1000(ubuntu) groups=1000(ubuntu),27(sudo)
cat /etc/redhat-release: End_of_file
grep 'model name' /proc/cpuinfo: model name	: Intel(R) Xeon(R) CPU E5-2660 v3 @ 2.60GHz
grep 'MemTotal' /proc/meminfo: MemTotal:       65861644 kB
grep 'SwapTotal' /proc/meminfo: SwapTotal:      67006460 kB
cilRep: preprocessing IO function signatures: /tmp/tmpebfd96.c /tmp/tmpa48673.c
cilRep: done preprocessing IO function signatures
cilrep: from_source: pre: stmt_count = 1
cilRep: find/parser.c: parsing
cilRep: find/parser.c: parsed (0.281642 MB)
cilRep: computing liveness
cilRep: liveness failure for safe_atoi: Errormsg.Error
cilRep: liveness failure for insert_fprintf: Errormsg.Error
cilRep: computed liveness
cilrep: from_source: post: stmt_count: 2532
faultLocRep: compute_localization: fault_scheme: path, fix_scheme: default
Rep: coverage_sourcename: /home/ubuntu/corebench/findutils/findutils-case-e8bd5a2c-93623752/coverage/coverage.c
cilRep: instrumenting for fault localization
cilRep: WARNING: definition of fprintf found at /usr/include/x86_64-linux-gnu/bits/stdio2.h:94
	cannot instrument for coverage (would be recursive)
cilRep: WARNING: definition of fprintf found at /usr/include/x86_64-linux-gnu/bits/string3.h:75
	cannot instrument for coverage (would be recursive)
cilRep: done instrumenting for fault localization
coverage negative:
	test: 1
coverage positive:
	test: 1
	test: 2
	test: 3
	test: 4
	test: 5
	test: 6
	test: 7
	test: 8
	test: 9
	test: 10
	test: 11
	test: 12
	test: 13
	test: 14
	test: 15
	test: 16
	test: 17
	test: 18
	test: 19
	test: 20
	test: 21
	test: 22
	test: 23
	test: 24
	test: 25
	test: 26
	test: 27
	test: 28
	test: 29
	test: 30
	test: 31
	test: 32
	test: 33
	test: 34
	test: 35
	test: 36
	test: 37
	test: 38
	test: 39
	test: 40
	test: 41
	test: 42
	test: 43
	test: 44
	test: 45
	test: 46
	test: 47
	test: 48
	test: 49
	test: 50
	test: 51
	test: 52
	test: 53
	test: 54
	test: 55
	test: 56
	test: 57
	test: 58
	test: 59
	test: 60
	test: 61
	test: 62
	test: 63
	test: 64
	test: 65
	test: 66
	test: 67
	test: 68
	test: 69
	test: 70
	test: 71
	test: 72
	test: 73
	test: 74
	test: 75
	test: 76
	test: 77
	test: 78
cilRep: default.cache: saved
cachingRep: default.cache: saved
faultlocRep: default.cache: saved
cilrep done serialize
cilRep: stmt_count = 2532
cilRep: stmts in weighted_path = 66
cilRep: total weight = 66
cilRep: stmts in weighted_path with weight >= 1.0 = 66
cilRep: find/parser.c (code bank/base file; atoms [1,2532])
cilRep: 1 file(s) total in representation
search: ww_adaptive_1 begins (time = 1454257022.399012)
cilRep: coverage ignores: /usr/lib/gcc/x86_64-linux-gnu/4.8/include
cilRep: coverage ignores: /usr/local/include
cilRep: coverage ignores: /usr/lib/gcc/x86_64-linux-gnu/4.8/include-fixed
cilRep: coverage ignores: /usr/include
cilRep: atoms in standard headers: 695
cilRep: fix-space quotient by string: 66 -> 56
progeq: computing alias analysis information
progeq: WARNING: cannot resolve call: __xstat
progeq: WARNING: cannot resolve call: __lxstat
progeq: WARNING: cannot resolve call: __fxstat
progeq: WARNING: cannot resolve call: __fxstatat
progeq: WARNING: cannot resolve call: __xmknod
progeq: WARNING: cannot resolve call: __xmknodat
progeq: WARNING: cannot resolve call: __xstat64
progeq: WARNING: cannot resolve call: __lxstat64
progeq: WARNING: cannot resolve call: __fxstat64
progeq: WARNING: cannot resolve call: __fxstatat64
progeq: WARNING: cannot resolve call: __builtin_expect
progeq: WARNING: cannot resolve call: __uflow
progeq: WARNING: cannot resolve call: __overflow
progeq: WARNING: cannot resolve call: __getdelim
progeq: WARNING: cannot resolve call: __builtin_object_size
progeq: WARNING: cannot resolve call: __builtin___sprintf_chk
progeq: WARNING: cannot resolve call: __builtin___vsprintf_chk
progeq: WARNING: cannot resolve call: __builtin___snprintf_chk
progeq: WARNING: cannot resolve call: __builtin___vsnprintf_chk
progeq: WARNING: cannot resolve call: __fprintf_chk
progeq: WARNING: cannot resolve call: __printf_chk
progeq: WARNING: cannot resolve call: __vfprintf_chk
progeq: WARNING: cannot resolve call: __dprintf_chk
progeq: WARNING: cannot resolve call: __vdprintf_chk
progeq: WARNING: cannot resolve call: __asprintf_chk
progeq: WARNING: cannot resolve call: __obstack_printf_chk
progeq: WARNING: cannot resolve call: __vasprintf_chk
progeq: WARNING: cannot resolve call: __obstack_vprintf_chk
progeq: WARNING: cannot resolve call: __fgets_chk
progeq: WARNING: cannot resolve call: __fgets_chk_warn
progeq: WARNING: cannot resolve call: __fgets_alias
progeq: WARNING: cannot resolve call: __fread_chk
progeq: WARNING: cannot resolve call: __fread_chk_warn
progeq: WARNING: cannot resolve call: __fread_alias
progeq: WARNING: cannot resolve call: __fgets_unlocked_chk
progeq: WARNING: cannot resolve call: __fgets_unlocked_chk_warn
progeq: WARNING: cannot resolve call: __fgets_unlocked_alias
progeq: WARNING: cannot resolve call: __fread_unlocked_chk
progeq: WARNING: cannot resolve call: __fread_unlocked_chk_warn
progeq: WARNING: cannot resolve call: __fread_unlocked_alias
progeq: WARNING: cannot resolve call: __builtin_strchr
progeq: WARNING: cannot resolve call: __builtin___memcpy_chk
progeq: WARNING: cannot resolve call: __builtin___memmove_chk
progeq: WARNING: cannot resolve call: __builtin___mempcpy_chk
progeq: WARNING: cannot resolve call: __builtin___memset_chk
progeq: WARNING: cannot resolve call: __builtin___strcpy_chk
progeq: WARNING: cannot resolve call: __builtin___stpcpy_chk
progeq: WARNING: cannot resolve call: __builtin___strncpy_chk
progeq: WARNING: cannot resolve call: __stpncpy_chk
progeq: WARNING: cannot resolve call: __stpncpy_alias
progeq: WARNING: cannot resolve call: __builtin___strcat_chk
progeq: WARNING: cannot resolve call: __builtin___strncat_chk
progeq: WARNING: cannot resolve call: *__compar
progeq: WARNING: cannot resolve call: __realpath_chk
progeq: WARNING: cannot resolve call: __realpath_alias
progeq: WARNING: cannot resolve call: __ptsname_r_chk
progeq: WARNING: cannot resolve call: __ptsname_r_chk_warn
progeq: WARNING: cannot resolve call: __ptsname_r_alias
progeq: WARNING: cannot resolve call: __wctomb_chk
progeq: WARNING: cannot resolve call: __wctomb_alias
progeq: WARNING: cannot resolve call: __mbstowcs_chk
progeq: WARNING: cannot resolve call: __mbstowcs_chk_warn
progeq: WARNING: cannot resolve call: __mbstowcs_alias
progeq: WARNING: cannot resolve call: __wcstombs_chk
progeq: WARNING: cannot resolve call: __wcstombs_chk_warn
progeq: WARNING: cannot resolve call: __wcstombs_alias
progeq: WARNING: cannot resolve call: __read_chk
progeq: WARNING: cannot resolve call: __read_chk_warn
progeq: WARNING: cannot resolve call: __read_alias
progeq: WARNING: cannot resolve call: __pread_chk
progeq: WARNING: cannot resolve call: __pread_chk_warn
progeq: WARNING: cannot resolve call: __pread_alias
progeq: WARNING: cannot resolve call: __pread64_chk
progeq: WARNING: cannot resolve call: __pread64_chk_warn
progeq: WARNING: cannot resolve call: __pread64_alias
progeq: WARNING: cannot resolve call: __readlink_chk
progeq: WARNING: cannot resolve call: __readlink_chk_warn
progeq: WARNING: cannot resolve call: __readlink_alias
progeq: WARNING: cannot resolve call: __readlinkat_chk
progeq: WARNING: cannot resolve call: __readlinkat_chk_warn
progeq: WARNING: cannot resolve call: __readlinkat_alias
progeq: WARNING: cannot resolve call: __getcwd_chk
progeq: WARNING: cannot resolve call: __getcwd_chk_warn
progeq: WARNING: cannot resolve call: __getcwd_alias
progeq: WARNING: cannot resolve call: __getwd_chk
progeq: WARNING: cannot resolve call: __getwd_warn
progeq: WARNING: cannot resolve call: __confstr_chk
progeq: WARNING: cannot resolve call: __confstr_chk_warn
progeq: WARNING: cannot resolve call: __confstr_alias
progeq: WARNING: cannot resolve call: __getgroups_chk
progeq: WARNING: cannot resolve call: __getgroups_chk_warn
progeq: WARNING: cannot resolve call: __getgroups_alias
progeq: WARNING: cannot resolve call: __ttyname_r_chk
progeq: WARNING: cannot resolve call: __ttyname_r_chk_warn
progeq: WARNING: cannot resolve call: __ttyname_r_alias
progeq: WARNING: cannot resolve call: __getlogin_r_chk
progeq: WARNING: cannot resolve call: __getlogin_r_chk_warn
progeq: WARNING: cannot resolve call: __getlogin_r_alias
progeq: WARNING: cannot resolve call: __gethostname_chk
progeq: WARNING: cannot resolve call: __gethostname_chk_warn
progeq: WARNING: cannot resolve call: __gethostname_alias
progeq: WARNING: cannot resolve call: __getdomainname_chk
progeq: WARNING: cannot resolve call: __getdomainname_chk_warn
progeq: WARNING: cannot resolve call: __getdomainname_alias
progeq: WARNING: cannot resolve call: __strtol_internal
progeq: WARNING: cannot resolve call: __strtoul_internal
progeq: WARNING: cannot resolve call: __wcstol_internal
progeq: WARNING: cannot resolve call: __wcstoul_internal
progeq: WARNING: cannot resolve call: __ctype_tolower_loc
progeq: WARNING: cannot resolve call: __ctype_toupper_loc
progeq: WARNING: cannot resolve call: xalloc_die
progeq: WARNING: cannot resolve call: xmalloc
progeq: WARNING: cannot resolve call: xrealloc
progeq: WARNING: cannot resolve call: __builtin_va_arg_pack_len
progeq: WARNING: cannot resolve call: __open_too_many_args
progeq: WARNING: cannot resolve call: __open_2
progeq: WARNING: cannot resolve call: __open_alias
progeq: WARNING: cannot resolve call: __open64_too_many_args
progeq: WARNING: cannot resolve call: __open64_2
progeq: WARNING: cannot resolve call: __open64_alias
progeq: WARNING: cannot resolve call: __openat_too_many_args
progeq: WARNING: cannot resolve call: __openat_2
progeq: WARNING: cannot resolve call: __openat_alias
progeq: WARNING: cannot resolve call: __openat64_too_many_args
progeq: WARNING: cannot resolve call: __openat64_2
progeq: WARNING: cannot resolve call: __openat64_alias
progeq: WARNING: cannot resolve call: dcgettext
progeq: WARNING: cannot resolve call: error
progeq: WARNING: cannot resolve call: __builtin_strlen
progeq: WARNING: cannot resolve call: __builtin_strcmp
progeq: WARNING: cannot resolve call: *(options.xstat)
progeq: WARNING: cannot resolve call: fatal_file_error
progeq: WARNING: cannot resolve call: get_new_pred_noarg
progeq: WARNING: cannot resolve call: set_stat_placeholders
progeq: WARNING: cannot resolve call: insert_primary
progeq: WARNING: cannot resolve call: insert_primary_noarg
progeq: WARNING: cannot resolve call: get_start_dirfd
progeq: WARNING: cannot resolve call: insert_primary_withpred
progeq: WARNING: cannot resolve call: next_element
progeq: WARNING: cannot resolve call: safely_quote_err_filename
progeq: WARNING: cannot resolve call: mbsstr
progeq: WARNING: cannot resolve call: free
progeq: WARNING: cannot resolve call: bc_init_controlinfo
progeq: WARNING: cannot resolve call: bc_use_sensible_arg_max
progeq: WARNING: cannot resolve call: bc_init_state
progeq: WARNING: cannot resolve call: bc_push_arg
progeq: WARNING: cannot resolve call: clone_quoting_options
progeq: WARNING: cannot resolve call: sharefile_fopen
progeq: WARNING: cannot resolve call: fileno
progeq: WARNING: cannot resolve call: isatty
progeq: WARNING: cannot resolve call: filesystem_type
progeq: WARNING: cannot resolve call: xstrtoumax
progeq: WARNING: cannot resolve call: __errno_location
progeq: WARNING: cannot resolve call: quotearg_n_style
progeq: WARNING: cannot resolve call: getgrnam
progeq: WARNING: cannot resolve call: endgrent
progeq: WARNING: cannot resolve call: __builtin_strspn
progeq: WARNING: cannot resolve call: usage
progeq: WARNING: cannot resolve call: __builtin_strpbrk
progeq: WARNING: cannot resolve call: fnmatch
progeq: WARNING: cannot resolve call: re_set_syntax
progeq: WARNING: cannot resolve call: re_compile_pattern
progeq: WARNING: cannot resolve call: xstrtod
progeq: WARNING: cannot resolve call: __assert_fail
progeq: WARNING: cannot resolve call: get_new_pred_chk_op
progeq: WARNING: cannot resolve call: parse_datetime
progeq: WARNING: cannot resolve call: matches_start_point
progeq: WARNING: cannot resolve call: get_regex_type
progeq: WARNING: cannot resolve call: close
progeq: WARNING: cannot resolve call: getpwnam
progeq: WARNING: cannot resolve call: endpwent
progeq: WARNING: cannot resolve call: display_findutils_version
progeq: WARNING: cannot resolve call: is_fts_enabled
search: fix space reduced (time_taken = 4.81161)
excluded 0 deletes (from list of 0 total edits)
search: ww_adaptive: 66 deletes
CARDINAL?before:2:after0
REMOVED?false
CARDINAL?before:2:after0
REMOVED?false
CARDINAL?before:56:after0
REMOVED?false
CARDINAL?before:56:after0
REMOVED?false
CARDINAL?before:56:after0
REMOVED?false
CARDINAL?before:6:after0
REMOVED?false
CARDINAL?before:56:after0
REMOVED?false
CARDINAL?before:6:after0
REMOVED?false
CARDINAL?before:6:after0
REMOVED?false
CARDINAL?before:6:after0
REMOVED?false
CARDINAL?before:6:after0
REMOVED?false
CARDINAL?before:17:after0
REMOVED?false
CARDINAL?before:17:after0
REMOVED?false
CARDINAL?before:56:after0
REMOVED?false
CARDINAL?before:17:after0
REMOVED?false
CARDINAL?before:56:after0
REMOVED?false
CARDINAL?before:56:after0
REMOVED?false
CARDINAL?before:17:after0
REMOVED?false
CARDINAL?before:17:after0
REMOVED?false
CARDINAL?before:17:after0
REMOVED?false
CARDINAL?before:17:after0
REMOVED?false
CARDINAL?before:56:after0
REMOVED?false
CARDINAL?before:17:after0
REMOVED?false
CARDINAL?before:17:after0
REMOVED?false
CARDINAL?before:17:after0
REMOVED?false
CARDINAL?before:17:after0
REMOVED?false
CARDINAL?before:17:after0
REMOVED?false
CARDINAL?before:17:after0
REMOVED?false
CARDINAL?before:17:after0
REMOVED?false
CARDINAL?before:17:after0
REMOVED?false
CARDINAL?before:17:after0
REMOVED?false
CARDINAL?before:17:after0
REMOVED?false
CARDINAL?before:4:after0
REMOVED?false
CARDINAL?before:4:after0
REMOVED?false
CARDINAL?before:56:after0
REMOVED?false
CARDINAL?before:4:after0
REMOVED?false
CARDINAL?before:4:after0
REMOVED?false
CARDINAL?before:7:after0
REMOVED?false
CARDINAL?before:7:after0
REMOVED?false
CARDINAL?before:7:after0
REMOVED?false
CARDINAL?before:7:after0
REMOVED?false
CARDINAL?before:7:after0
REMOVED?false
CARDINAL?before:7:after0
REMOVED?false
CARDINAL?before:7:after0
REMOVED?false
CARDINAL?before:56:after0
REMOVED?false
CARDINAL?before:56:after0
REMOVED?false
CARDINAL?before:4:after0
REMOVED?false
CARDINAL?before:4:after0
REMOVED?false
CARDINAL?before:4:after0
REMOVED?false
CARDINAL?before:4:after0
REMOVED?false
CARDINAL?before:56:after0
REMOVED?false
CARDINAL?before:56:after0
REMOVED?false
CARDINAL?before:13:after0
REMOVED?false
CARDINAL?before:56:after0
REMOVED?false
CARDINAL?before:13:after0
REMOVED?false
CARDINAL?before:13:after0
REMOVED?false
CARDINAL?before:13:after0
REMOVED?false
CARDINAL?before:13:after0
REMOVED?false
CARDINAL?before:13:after0
REMOVED?false
CARDINAL?before:13:after0
REMOVED?false
CARDINAL?before:13:after0
REMOVED?false
CARDINAL?before:13:after0
REMOVED?false
CARDINAL?before:13:after0
REMOVED?false
CARDINAL?before:13:after0
REMOVED?false
CARDINAL?before:13:after0
REMOVED?false
CARDINAL?before:56:after0
REMOVED?false
excluded 0 deletes (from list of 0 total edits)
search: ww_adaptive: 0 appends
excluded 0 appends (from list of 0 total edits)
search: ww_adaptive: 460 appends
search: ww_adaptive: 460 possible edits
search: ready to start (time_taken = 3.64801)
search: ww_adaptive: finding best
rep: WARNING: test_visiting_atoms: no data available
	try using --coverage-per-test and/or --regen-paths
	defaulting to 'all tests'
search: ww_adaptive: found best (time_taken = 0.0226049)
	variant     1/  460 = a(2429,2429)    (79 tests, cond 0)
		n1 false (test_time = 2.25069)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.0252249)
	variant     2/  460 = a(2429,2377)    (79 tests, cond 0)
		n1 false (test_time = 2.05347)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.0355809)
	variant     3/  460 = a(2429,824)     (79 tests, cond 0)
		n1 false (test_time = 2.12431)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.0223401)
	variant     4/  460 = a(2429,815)     (79 tests, cond 0)
		n1 false (test_time = 2.07351)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.0214801)
	variant     5/  460 = a(2418,2429)    (79 tests, cond 0)
		n1 false (test_time = 2.1183)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.021924)
	variant     6/  460 = a(2418,2418)    (79 tests, cond 0)
		n1 false (test_time = 2.10621)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.022229)
	variant     7/  460 = a(2418,2417)    (79 tests, cond 0)
		n1 false (test_time = 2.03958)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.024827)
	variant     8/  460 = a(2418,2415)    (79 tests, cond 0)
		n1 false (test_time = 2.06531)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.024385)
	variant     9/  460 = a(2418,2414)    (79 tests, cond 0)
		n1 false (test_time = 2.0137)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.0262649)
	variant    10/  460 = a(2418,2412)    (79 tests, cond 0)
		n1 false (test_time = 2.07675)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.021997)
	variant    11/  460 = a(2418,2411)    (79 tests, cond 0)
		n1 false (test_time = 2.31053)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.02351)
	variant    12/  460 = a(2418,2410)    (79 tests, cond 0)
		n1 false (test_time = 2.17406)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.0325072)
	variant    13/  460 = a(2418,2408)    (79 tests, cond 0)
		n1 false (test_time = 2.12544)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.0220308)
	variant    14/  460 = a(2418,2377)    (79 tests, cond 0)
		n1 false (test_time = 1.92723)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.0229921)
	variant    15/  460 = a(2418,2375)    (79 tests, cond 0)
		n1 false (test_time = 1.98694)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.0325482)
	variant    16/  460 = a(2418,824)     (79 tests, cond 0)
		n1 false (test_time = 2.0194)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.021539)
	variant    17/  460 = a(2418,815)     (79 tests, cond 0)
		n1 false (test_time = 1.94328)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.02123)
	variant    18/  460 = a(2417,2417)    (79 tests, cond 0)
		n1 false (test_time = 2.05648)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.021723)
	variant    19/  460 = a(2417,2415)    (79 tests, cond 0)
		n1 false (test_time = 2.07731)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.021636)
	variant    20/  460 = a(2417,2414)    (79 tests, cond 0)
		n1 false (test_time = 2.07443)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.0269351)
	variant    21/  460 = a(2417,2410)    (79 tests, cond 0)
		n1 false (test_time = 2.29867)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.0312171)
	variant    22/  460 = a(2417,2408)    (79 tests, cond 0)
		n1 false (test_time = 2.31799)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.028857)
	variant    23/  460 = a(2417,2375)    (79 tests, cond 0)
		n1 false (test_time = 2.33228)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.0211902)
	variant    24/  460 = a(2416,2418)    (79 tests, cond 0)
		n1 false (test_time = 2.03711)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.021611)
	variant    25/  460 = a(2416,2417)    (79 tests, cond 0)
		n1 false (test_time = 2.20757)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.021791)
	variant    26/  460 = a(2416,2416)    (79 tests, cond 0)
		n1 false (test_time = 2.2375)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.0218432)
	variant    27/  460 = a(2416,2415)    (79 tests, cond 0)
		n1 false (test_time = 2.25004)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.0221691)
	variant    28/  460 = a(2416,2414)    (79 tests, cond 0)
		n1 false (test_time = 2.05615)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.020612)
	variant    29/  460 = a(2416,2413)    (79 tests, cond 0)
		n1 false (test_time = 2.23827)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.029489)
	variant    30/  460 = a(2416,2412)    (79 tests, cond 0)
		n1 false (test_time = 2.2489)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.023814)
	variant    31/  460 = a(2416,2411)    (79 tests, cond 0)
		n1 false (test_time = 1.94009)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.0206361)
	variant    32/  460 = a(2416,2410)    (79 tests, cond 0)
		n1 false (test_time = 2.0012)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.0197771)
	variant    33/  460 = a(2416,2409)    (79 tests, cond 0)
		n1 false (test_time = 1.98651)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.0202801)
	variant    34/  460 = a(2416,2408)    (79 tests, cond 0)
		n1 false (test_time = 2.04844)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.029038)
	variant    35/  460 = a(2416,2375)    (79 tests, cond 0)
		n1 false (test_time = 2.1871)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.024713)
	variant    36/  460 = a(2415,2417)    (79 tests, cond 0)
		n1 false (test_time = 2.20991)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.0237322)
	variant    37/  460 = a(2415,2415)    (79 tests, cond 0)
		n1 false (test_time = 2.30193)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.033921)
	variant    38/  460 = a(2415,2414)    (79 tests, cond 0)
		n1 false (test_time = 2.1125)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.0207858)
	variant    39/  460 = a(2415,2412)    (79 tests, cond 0)
		n1 false (test_time = 2.24706)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.019398)
	variant    40/  460 = a(2415,2410)    (79 tests, cond 0)
		n1 false (test_time = 2.11197)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.0199461)
	variant    41/  460 = a(2415,2408)    (79 tests, cond 0)
		n1 false (test_time = 1.99875)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.0187991)
	variant    42/  460 = a(2415,2375)    (79 tests, cond 0)
		n1 false (test_time = 2.04001)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.0222502)
	variant    43/  460 = a(2414,2418)    (79 tests, cond 0)
		n1 false (test_time = 2.30083)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.02302)
	variant    44/  460 = a(2414,2417)    (79 tests, cond 0)
		n1 false (test_time = 2.05934)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.028933)
	variant    45/  460 = a(2414,2415)    (79 tests, cond 0)
		n1 false (test_time = 1.96776)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.022351)
	variant    46/  460 = a(2414,2414)    (79 tests, cond 0)
		n1 false (test_time = 1.98914)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.021013)
	variant    47/  460 = a(2414,2413)    (79 tests, cond 0)
		n1 false (test_time = 2.17075)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.020493)
	variant    48/  460 = a(2414,2412)    (79 tests, cond 0)
		n1 false (test_time = 2.33907)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.0221999)
	variant    49/  460 = a(2414,2411)    (79 tests, cond 0)
		n1 false (test_time = 2.30861)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.020803)
	variant    50/  460 = a(2414,2410)    (79 tests, cond 0)
		n1 false (test_time = 2.12665)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.0194809)
	variant    51/  460 = a(2414,2409)    (79 tests, cond 0)
		n1 false (test_time = 2.17515)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.027787)
	variant    52/  460 = a(2414,2408)    (79 tests, cond 0)
		n1 false (test_time = 2.37784)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.0262969)
	variant    53/  460 = a(2414,2375)    (79 tests, cond 0)
		n1 false (test_time = 2.56807)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.0349462)
	variant    54/  460 = a(2413,2418)    (79 tests, cond 0)
		n1 false (test_time = 2.30405)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.0191569)
	variant    55/  460 = a(2413,2417)    (79 tests, cond 0)
		n1 false (test_time = 2.10109)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.020541)
	variant    56/  460 = a(2413,2416)    (79 tests, cond 0)
		n1 false (test_time = 2.33046)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.0235341)
	variant    57/  460 = a(2413,2415)    (79 tests, cond 0)
		n1 false (test_time = 2.21202)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.0199811)
	variant    58/  460 = a(2413,2414)    (79 tests, cond 0)
		n1 false (test_time = 2.08748)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.020725)
	variant    59/  460 = a(2413,2413)    (79 tests, cond 0)
		n1 false (test_time = 2.20498)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.024992)
	variant    60/  460 = a(2413,2412)    (79 tests, cond 0)
		n1 false (test_time = 2.22098)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.023531)
	variant    61/  460 = a(2413,2411)    (79 tests, cond 0)
		n1 false (test_time = 2.23475)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.020123)
	variant    62/  460 = a(2413,2410)    (79 tests, cond 0)
		n1 false (test_time = 2.08688)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.0192621)
	variant    63/  460 = a(2413,2409)    (79 tests, cond 0)
		n1 false (test_time = 2.29807)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.019165)
	variant    64/  460 = a(2413,2408)    (79 tests, cond 0)
		n1 false (test_time = 2.32915)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.022198)
	variant    65/  460 = a(2413,2375)    (79 tests, cond 0)
		n1 false (test_time = 2.17539)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.0206821)
	variant    66/  460 = a(2412,2417)    (79 tests, cond 0)
		n1 false (test_time = 2.12144)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.0224409)
	variant    67/  460 = a(2412,2415)    (79 tests, cond 0)
		n1 false (test_time = 1.99896)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.0199358)
	variant    68/  460 = a(2412,2414)    (79 tests, cond 0)
		n1 false (test_time = 1.98236)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.019438)
	variant    69/  460 = a(2412,2410)    (79 tests, cond 0)
		n1 false (test_time = 2.00604)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.029752)
	variant    70/  460 = a(2412,2408)    (79 tests, cond 0)
		n1 false (test_time = 2.31831)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.0180001)
	variant    71/  460 = a(2412,2375)    (79 tests, cond 0)
		n1 false (test_time = 2.27537)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.0198641)
	variant    72/  460 = a(2411,2417)    (79 tests, cond 0)
		n1 false (test_time = 2.19094)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.0194979)
	variant    73/  460 = a(2411,2416)    (79 tests, cond 0)
		n1 false (test_time = 2.31458)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.0241151)
	variant    74/  460 = a(2411,2415)    (79 tests, cond 0)
		n1 false (test_time = 2.05787)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.0224009)
	variant    75/  460 = a(2411,2414)    (79 tests, cond 0)
		n1 false (test_time = 2.00226)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.0317359)
	variant    76/  460 = a(2411,2408)    (79 tests, cond 0)
		n1 false (test_time = 2.17215)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.020072)
	variant    77/  460 = a(2411,2375)    (79 tests, cond 0)
		n1 false (test_time = 1.97416)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.0214269)
	variant    78/  460 = a(2410,2417)    (79 tests, cond 0)
		n1 false (test_time = 2.16946)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.0177071)
	variant    79/  460 = a(2410,2415)    (79 tests, cond 0)
		n1 false (test_time = 1.99932)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.0177259)
	variant    80/  460 = a(2410,2414)    (79 tests, cond 0)
		n1 false (test_time = 2.14194)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.017803)
	variant    81/  460 = a(2410,2410)    (79 tests, cond 0)
		n1 false (test_time = 1.93958)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.018872)
	variant    82/  460 = a(2410,2408)    (79 tests, cond 0)
		n1 false (test_time = 2.03044)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.0197659)
	variant    83/  460 = a(2410,2375)    (79 tests, cond 0)
		n1 false (test_time = 2.0505)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.0277128)
	variant    84/  460 = a(2409,2418)    (79 tests, cond 0)
		n1 true (test_time = 2.26334)
		p1 true (test_time = 0.182221)
		p2 true (test_time = 0.152235)
		p3 true (test_time = 0.15763)
		p4 true (test_time = 0.177719)
		p5 true (test_time = 0.19612)
		p6 true (test_time = 0.161287)
		p7 true (test_time = 0.156614)
		p8 true (test_time = 0.201088)
		p9 true (test_time = 0.221421)
		p10 true (test_time = 0.207813)
		p11 true (test_time = 0.205624)
		p12 true (test_time = 0.226067)
		p13 true (test_time = 0.198728)
		p14 true (test_time = 0.199189)
		p15 true (test_time = 0.207263)
		p16 true (test_time = 0.250758)
		p17 true (test_time = 0.242011)
		p18 true (test_time = 0.216031)
		p19 true (test_time = 0.233603)
		p20 true (test_time = 0.195512)
		p21 true (test_time = 0.242836)
		p22 true (test_time = 0.184531)
		p23 true (test_time = 0.179541)
		p24 true (test_time = 0.140552)
		p25 true (test_time = 0.15047)
		p26 true (test_time = 0.178238)
		p27 true (test_time = 0.153056)
		p28 true (test_time = 0.155846)
		p29 true (test_time = 0.154783)
		p30 true (test_time = 0.134263)
		p31 true (test_time = 0.13547)
		p32 true (test_time = 0.135354)
		p33 true (test_time = 0.14526)
		p34 true (test_time = 0.129227)
		p35 true (test_time = 0.13806)
		p36 true (test_time = 0.144428)
		p37 true (test_time = 0.159718)
		p38 true (test_time = 0.160644)
		p39 true (test_time = 0.164952)
		p40 true (test_time = 0.170263)
		p41 true (test_time = 0.166162)
		p42 true (test_time = 0.172201)
		p43 true (test_time = 0.154733)
		p44 true (test_time = 0.154454)
		p45 true (test_time = 0.151813)
		p46 true (test_time = 0.151915)
		p47 true (test_time = 0.155841)
		p48 true (test_time = 0.151288)
		p49 true (test_time = 0.162497)
		p50 true (test_time = 0.1627)
		p51 true (test_time = 0.174685)
		p52 true (test_time = 0.153911)
		p53 true (test_time = 0.14874)
		p54 true (test_time = 0.18067)
		p55 true (test_time = 0.153568)
		p56 true (test_time = 0.158828)
		p57 true (test_time = 0.152721)
		p58 true (test_time = 0.157009)
		p59 true (test_time = 0.159508)
		p60 true (test_time = 0.168822)
		p61 true (test_time = 0.183818)
		p62 true (test_time = 0.185055)
		p63 true (test_time = 0.194563)
		p64 true (test_time = 0.171347)
		p65 true (test_time = 0.161038)
		p66 true (test_time = 0.155931)
		p67 true (test_time = 0.19237)
		p68 true (test_time = 0.178484)
		p69 true (test_time = 0.176968)
		p70 true (test_time = 0.177016)
		p71 true (test_time = 0.183409)
		p72 true (test_time = 0.169514)
		p73 true (test_time = 0.19964)
		p74 true (test_time = 0.196498)
		p75 true (test_time = 0.197997)
		p76 true (test_time = 0.17883)
		p77 true (test_time = 0.13625)
		p78 true (test_time = 0.15996)
search: ww_adaptive: ends (yes repair)

Repair Found: a(2409,2418)
Repair Name: a(2409,2418) 
Test Condition: 0
Test Cases Skipped: ""
Current Time: 1454257227.238827

Variant Test Case Queries: 162
"Test Suite Evaluations": 2.05063

Compile Failures: 0
Wall-Clock Seconds Elapsed: 221.062
  Activity Name                     Count Seconds = Percent of Total Time
  find_best_edit                       84   1.940 = 0.902808%
  append_sources                       66   3.634 = 1.69094%
  progeq partition                     56   4.141 = 1.92681%
  test                                241  30.949 = 14.3998%
  compile                              85 174.248 = 81.0738%
  TOTAL                                   214.925 = 97.2204% (avg CPU usage)
