WARNING: the argument --multi-file is deprecated. This is not fatal, as GenProg can handle certain deprecated options as of the March 2012 refactor.
However, you may want to consult the GenProg documentation to avoid using 
deprecated options in the future, and verify that your config is doing what you
think it is doing.WARNING: the argument --suffix-extension is deprecated. This is not fatal, as GenProg can handle certain deprecated options as of the March 2012 refactor.
However, you may want to consult the GenProg documentation to avoid using 
deprecated options in the future, and verify that your config is doing what you
think it is doing.WARNING: the argument --mutp is deprecated. This is not fatal, as GenProg can handle certain deprecated options as of the March 2012 refactor.
However, you may want to consult the GenProg documentation to avoid using 
deprecated options in the future, and verify that your config is doing what you
think it is doing.--allow-coverage-fail true
--anti-append-returngoto false
--anti-delete-cfgblock false
--anti-delete-empty false
--anti-delete-exit false
--anti-delete-setbeforeif false
--anti-delete-setinsideloop false
--appp 0.33333
--asm-code-only false
--best-edit-rule "1 * fault_loc_weight ; 1 * max_test_fail_prob ; -1 * num_tests"
--best-test-rule "1 * test_fail_prob ; 1 * test_fail_count ; -1 * test_pass_count"
--compiler "gcc"
--compiler-command "perl compile.pl __EXE_NAME__ > /dev/null"
--compiler-opts ""
--continue false
--coverage-info ""
--coverage-per-test false
--crossover "subset"
--crossp 0.5
--delp 0.33333
--describe-machine true
--diversity-selection 0
--edit-script false
--elf-risc false
--exclude-edits ""
--exp-diff false
--fault-file ""
--fault-path "coverage.path.neg"
--fault-scheme "path"
--fitness-in-parallel 2
--fix-file ""
--fix-oracle ""
--fix-path "coverage.path.pos"
--fix-scheme "default"
--flatten-path ""
--format "txt"
--gen-per-exchange 1
--generations 10
--gui false
--hostname "127.0.0.1"
--ignore-dead-code true
--ignore-equiv-appends true
--ignore-standard-headers true
--ignore-string-equiv-fixes true
--ignore-untyped-returns false
--incoming-pop ""
--keep-source false
--label-repair true
--max-evals 0
--minimization false
--mt-cov false
--multiopt-minimize false
--multiopt-no-inf false
--neg-tests 1
--neg-weight 1
--negative-test-weight 2
--neutral-walk-max-size 0
--neutral-walk-weight ""
--nht-id "global"
--nht-port 51000
--nht-server ""
--no-delete false
--no-rep-cache true
--no-test-cache true
--num-comps 2
--num-objectives 2
--oracle-genome ""
--popsize 40
--port 60000
--pos-tests 31
--pos-weight 0.1
--prefix "preprocessed"
--preprocessor ""
--print-incremental-evals false
--print-source-name false
--program "bugged-program.txt"
--promut 1
--quiet false
--regen-paths false
--rep "cilpatch"
--rep-cache "default.cache"
--repp 0
--samp-strat "variant"
--sample 1
--sample-runs 100
--sanity "no"
--search "ww"
--seed 0
--semantic-check "scope"
--single-fitness false
--skip-failed-sanity-tests true
--skip-tests ""
--split-search 0
--sport 65000
--subatom-constp 0.5
--subatom-mutp 0
--super-mutant false
--super-mutant-size 50
--swap-bug false
--swapp 0.33333
--template-cache ""
--templates ""
--test-command "timeout -k 75s 75s __TEST_SCRIPT__ __TEST_NAME__"
--test-script "./test.sh"
--tournament-size 2
--tweet false
--uniq false
--valgrind false
--variants-exchanged 50
uname -a: Linux genprog-shinhwei2 3.19.0-43-generic #49~14.04.1-Ubuntu SMP Thu Dec 31 15:44:49 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux
date: Tue Feb  2 12:26:30 SGT 2016
id: uid=1000(ubuntu) gid=1000(ubuntu) groups=1000(ubuntu),27(sudo)
cat: /etc/redhat-release: No such file or directory
cat /etc/redhat-release: End_of_file
grep 'model name' /proc/cpuinfo: model name	: Intel(R) Xeon(R) CPU E5-2660 v3 @ 2.60GHz
grep 'MemTotal' /proc/meminfo: MemTotal:       65861644 kB
grep 'SwapTotal' /proc/meminfo: SwapTotal:      67006460 kB
cilRep: preprocessing IO function signatures: /tmp/tmp275f42.c /tmp/tmp3ac99e.c
cilRep: done preprocessing IO function signatures
cilrep: from_source: pre: stmt_count = 1
cilRep: src/cut.c: parsing
cilRep: src/cut.c: parsed (0.0606833 MB)
cilRep: computing liveness
Bug: BF(Liveness): stmtStartData is not initialized for -1: __Cont: 
#line 513 "src/cut.c"
i ++;
Liveness failed on function:
 static _Bool set_fields(char const   *fieldstr ) 
{ size_t initial ;
  size_t value ;
  _Bool lhs_specified ;
  _Bool rhs_specified ;
  _Bool dash_found ;
  _Bool field_found ;
  struct range_pair *rp ;
  size_t n_rp ;
  size_t n_rp_allocated ;
  size_t i ;
  _Bool in_digits ;
  char *tmp ;
  char *tmp___0 ;
  char *tmp___1 ;
  char *tmp___2 ;
  char *tmp___3 ;
  void *tmp___4 ;
  char *tmp___5 ;
  void *tmp___6 ;
  char *tmp___7 ;
  void *tmp___8 ;
  size_t len ;
  size_t tmp___9 ;
  char *bad_num ;
  char *tmp___10 ;
  char const   *tmp___11 ;
  char *tmp___12 ;
  char const   *tmp___13 ;
  char *tmp___14 ;
  int tmp___15 ;
  char *tmp___16 ;
  unsigned short const   **tmp___17 ;
  unsigned char tmp___18 ;
  void *tmp___19 ;
  size_t rsi_candidate ;
  size_t tmp___20 ;
  _Bool tmp___21 ;
  size_t j ;
  _Bool tmp___22 ;

  {
   363: /* CIL Label */ 
#line 343
  initial = 1UL;
   364: /* CIL Label */ 
#line 344
  value = 0UL;
   365: /* CIL Label */ 
#line 345
  lhs_specified = (_Bool)0;
   366: /* CIL Label */ 
#line 346
  rhs_specified = (_Bool)0;
   367: /* CIL Label */ 
#line 347
  dash_found = (_Bool)0;
   368: /* CIL Label */ 
#line 348
  field_found = (_Bool)0;
   369: /* CIL Label */ 
#line 351
  rp = (struct range_pair *)((void *)0);
   370: /* CIL Label */ 
#line 352
  n_rp = 0UL;
   371: /* CIL Label */ 
#line 353
  n_rp_allocated = 0UL;
   372: /* CIL Label */ 
#line 355
  in_digits = (_Bool)0;
   373: /* CIL Label */ 
#line 360
  while (1) {
#line 362
    if ((int const   )*fieldstr == 45) {
#line 364
      in_digits = (_Bool)0;
#line 366
      if (dash_found) {
#line 367
        while (1) {
#line 367
          tmp = gettext("invalid byte, character or field list");
#line 367
          error(0, 0, (char const   *)tmp);
#line 367
          usage(1);
#line 367
          break;
        }
      } else {

      }
#line 368
      dash_found = (_Bool)1;
#line 369
      fieldstr ++;
#line 371
      if (lhs_specified) {
#line 371
        if (! value) {
#line 372
          while (1) {
#line 372
            tmp___0 = gettext("fields and positions are numbered from 1");
#line 372
            error(0, 0, (char const   *)tmp___0);
#line 372
            usage(1);
#line 372
            break;
          }
        } else {

        }
      } else {

      }
#line 374
      if (lhs_specified) {
#line 374
        initial = value;
      } else {
#line 374
        initial = 1UL;
      }
#line 375
      value = 0UL;
    } else {
#line 377
      if ((int const   )*fieldstr == 44) {
        goto _L___2;
      } else {
#line 377
        tmp___17 = __ctype_b_loc();
#line 377
        tmp___18 = to_uchar((char )*fieldstr);
#line 377
        if ((int const   )*(*tmp___17 + (int )tmp___18) & 1) {
          goto _L___2;
        } else {
#line 377
          if ((int const   )*fieldstr == 0) {
            _L___2: 
#line 380
            in_digits = (_Bool)0;
#line 382
            if (dash_found) {
#line 384
              dash_found = (_Bool)0;
#line 386
              if (! lhs_specified) {
#line 386
                if (! rhs_specified) {
#line 387
                  while (1) {
#line 387
                    tmp___1 = gettext("invalid range with no endpoint: -");
#line 387
                    error(0, 0, (char const   *)tmp___1);
#line 387
                    usage(1);
#line 387
                    break;
                  }
                } else {

                }
              } else {

              }
#line 391
              if (! rhs_specified) {
#line 395
                if (eol_range_start == 0UL) {
#line 396
                  eol_range_start = initial;
                } else {
#line 395
                  if (initial < eol_range_start) {
#line 396
                    eol_range_start = initial;
                  } else {

                  }
                }
#line 397
                field_found = (_Bool)1;
              } else {
#line 402
                if (value < initial) {
#line 403
                  while (1) {
#line 403
                    tmp___2 = gettext("invalid decreasing range");
#line 403
                    error(0, 0, (char const   *)tmp___2);
#line 403
                    usage(1);
#line 403
                    break;
                  }
                } else {

                }
#line 406
                if (eol_range_start != 0UL) {
#line 411
                  if (initial < eol_range_start) {
#line 416
                    if (eol_range_start <= value) {
#line 419
                      eol_range_start = initial;
                    } else {
#line 425
                      while (1) {
#line 425
                        if (initial == 0UL) {
                          goto _L;
                        } else {
#line 425
                          if (value == 0UL) {
                            _L: 
#line 425
                            while (1) {
#line 425
                              tmp___3 = gettext("fields and positions are numbered from 1");
#line 425
                              error(0, 0, (char const   *)tmp___3);
#line 425
                              usage(1);
#line 425
                              break;
                            }
                          } else {

                          }
                        }
#line 425
                        if (n_rp >= n_rp_allocated) {
#line 425
                          tmp___4 = x2nrealloc((void *)rp, & n_rp_allocated,
                                               sizeof(*rp));
#line 425
                          rp = (struct range_pair *)tmp___4;
                        } else {

                        }
#line 425
                        (rp + n_rp)->lo = initial;
#line 425
                        (rp + n_rp)->hi = value;
#line 425
                        n_rp ++;
#line 425
                        break;
                      }
                    }
#line 429
                    field_found = (_Bool)1;
                  } else {

                  }
                } else {
#line 435
                  while (1) {
#line 435
                    if (initial == 0UL) {
                      goto _L___0;
                    } else {
#line 435
                      if (value == 0UL) {
                        _L___0: 
#line 435
                        while (1) {
#line 435
                          tmp___5 = gettext("fields and positions are numbered from 1");
#line 435
                          error(0, 0, (char const   *)tmp___5);
#line 435
                          usage(1);
#line 435
                          break;
                        }
                      } else {

                      }
                    }
#line 435
                    if (n_rp >= n_rp_allocated) {
#line 435
                      tmp___6 = x2nrealloc((void *)rp, & n_rp_allocated,
                                           sizeof(*rp));
#line 435
                      rp = (struct range_pair *)tmp___6;
                    } else {

                    }
#line 435
                    (rp + n_rp)->lo = initial;
#line 435
                    (rp + n_rp)->hi = value;
#line 435
                    n_rp ++;
#line 435
                    break;
                  }
#line 436
                  field_found = (_Bool)1;
                }
#line 438
                value = 0UL;
              }
            } else {
#line 444
              while (1) {
#line 444
                if (value == 0UL) {
                  goto _L___1;
                } else {
#line 444
                  if (value == 0UL) {
                    _L___1: 
#line 444
                    while (1) {
#line 444
                      tmp___7 = gettext("fields and positions are numbered from 1");
#line 444
                      error(0, 0, (char const   *)tmp___7);
#line 444
                      usage(1);
#line 444
                      break;
                    }
                  } else {

                  }
                }
#line 444
                if (n_rp >= n_rp_allocated) {
#line 444
                  tmp___8 = x2nrealloc((void *)rp, & n_rp_allocated, sizeof(*rp));
#line 444
                  rp = (struct range_pair *)tmp___8;
                } else {

                }
#line 444
                (rp + n_rp)->lo = value;
#line 444
                (rp + n_rp)->hi = value;
#line 444
                n_rp ++;
#line 444
                break;
              }
#line 445
              value = 0UL;
#line 446
              field_found = (_Bool)1;
            }
#line 449
            if ((int const   )*fieldstr == 0) {
#line 451
              break;
            } else {

            }
#line 454
            fieldstr ++;
#line 455
            lhs_specified = (_Bool)0;
#line 456
            rhs_specified = (_Bool)0;
          } else {
#line 458
            if ((unsigned int )*fieldstr - 48U <= 9U) {
#line 463
              if (! in_digits) {
#line 464
                num_start = fieldstr;
              } else {
#line 463
                if (! num_start) {
#line 464
                  num_start = fieldstr;
                } else {

                }
              }
#line 465
              in_digits = (_Bool)1;
#line 467
              if (dash_found) {
#line 468
                rhs_specified = (_Bool)1;
              } else {
#line 470
                lhs_specified = (_Bool)1;
              }
#line 473
              if (0UL < value) {
#line 473
                tmp___15 = 0;
              } else {
#line 473
                if (value * 10UL + (unsigned long )((int const   )*fieldstr - 48) < value) {
#line 473
                  tmp___15 = 0;
                } else {
#line 473
                  value = value * 10UL + (unsigned long )((int const   )*fieldstr - 48);
#line 473
                  tmp___15 = 1;
                }
              }
#line 473
              if (! tmp___15) {
#line 478
                tmp___9 = strspn(num_start, "0123456789");
#line 478
                len = tmp___9;
#line 479
                tmp___10 = xstrndup(num_start, len);
#line 479
                bad_num = tmp___10;
#line 480
                if ((unsigned int )operating_mode == 1U) {
#line 481
                  tmp___11 = quote((char const   *)bad_num);
#line 481
                  tmp___12 = gettext("byte offset %s is too large");
#line 481
                  error(0, 0, (char const   *)tmp___12, tmp___11);
                } else {
#line 484
                  tmp___13 = quote((char const   *)bad_num);
#line 484
                  tmp___14 = gettext("field number %s is too large");
#line 484
                  error(0, 0, (char const   *)tmp___14, tmp___13);
                }
#line 486
                free((void *)bad_num);
#line 487
                exit(1);
              } else {

              }
#line 490
              fieldstr ++;
            } else {
#line 493
              while (1) {
#line 493
                tmp___16 = gettext("invalid byte, character or field list");
#line 493
                error(0, 0, (char const   *)tmp___16);
#line 493
                usage(1);
#line 493
                break;
              }
            }
          }
        }
      }
    }
  }
   374: /* CIL Label */ 
#line 496
  max_range_endpoint = 0UL;
   375: /* CIL Label */ 
#line 497
  i = 0UL;
   376: /* CIL Label */ 
#line 497
  while (i < n_rp) {
#line 499
    if ((rp + i)->hi > max_range_endpoint) {
#line 500
      max_range_endpoint = (rp + i)->hi;
    } else {

    }
#line 497
    i ++;
  }
   377: /* CIL Label */ 
#line 507
  if (max_range_endpoint) {
#line 508
    tmp___19 = xzalloc(max_range_endpoint / 8UL + 1UL);
#line 508
    printable_field = (unsigned char *)tmp___19;
  } else {

  }
   378: /* CIL Label */ 
#line 510
  qsort((void *)rp, n_rp, sizeof(*(rp + 0)), & compare_ranges);
   379: /* CIL Label */ 
#line 513
  i = 0UL;
   380: /* CIL Label */ 
#line 513
  while (i < n_rp) {
#line 516
    if (eol_range_start) {
#line 516
      if (eol_range_start <= (rp + i)->lo) {
        goto __Cont;
      } else {

      }
    } else {

    }
#line 521
    if (complement) {
#line 521
      tmp___20 = (rp + i)->hi + 1UL;
    } else {
#line 521
      tmp___20 = (rp + i)->lo;
    }
#line 521
    rsi_candidate = tmp___20;
#line 522
    if (output_delimiter_specified) {
#line 522
      tmp___21 = is_printable_field(rsi_candidate);
#line 522
      if (! tmp___21) {
#line 524
        mark_range_start(rsi_candidate);
      } else {

      }
    } else {

    }
#line 526
    j = (rp + i)->lo;
#line 526
    while (j <= (rp + i)->hi) {
#line 527
      mark_printable_field(j);
#line 526
      j ++;
    }
    __Cont: 
#line 513
    i ++;
  }
   381: /* CIL Label */ 
#line 530
  if (output_delimiter_specified) {
#line 530
    if (! complement) {
#line 530
      if (eol_range_start) {
#line 530
        if (max_range_endpoint) {
#line 530
          tmp___22 = is_printable_field(eol_range_start);
#line 530
          if (! tmp___22) {
#line 534
            mark_range_start(eol_range_start);
          } else {

          }
        } else {

        }
      } else {

      }
    } else {

    }
  } else {

  }
   382: /* CIL Label */ 
#line 536
  free((void *)rp);
   383: /* CIL Label */ 
#line 538
  return (field_found);
}
}

cilRep: liveness failure for set_fields: Errormsg.Error
Bug: BF(Liveness): stmtStartData is not initialized for -1: _L: 
#line 650
fwrite_unlocked((void const   */* __restrict  */)field_1_buffer, sizeof(char ),
                n_bytes, (FILE */* __restrict  */)stdout);
Liveness failed on function:
 static void cut_fields(FILE *stream ) 
{ int c ;
  size_t field_idx ;
  _Bool found_any_selected_field ;
  _Bool buffer_first_field ;
  _Bool tmp ;
  int tmp___0 ;
  ssize_t len ;
  size_t n_bytes ;
  _Bool got_line ;
  int tmp___1 ;
  int tmp___2 ;
  unsigned char tmp___3 ;
  _Bool tmp___4 ;
  int prev_c ;
  _Bool tmp___5 ;

  {
   504: /* CIL Label */ 
#line 595
  field_idx = 1UL;
   505: /* CIL Label */ 
#line 596
  found_any_selected_field = (_Bool)0;
   506: /* CIL Label */ 
#line 599
  c = getc_unlocked(stream);
   507: /* CIL Label */ 
#line 600
  if (c == -1) {
#line 601
    return;
  } else {

  }
   508: /* CIL Label */ 
#line 603
  ungetc(c, stream);
   509: /* CIL Label */ 
#line 604
  c = 0;
   510: /* CIL Label */ 
#line 612
  tmp = print_kth(1UL, (_Bool *)((void *)0));
   511: /* CIL Label */ 
#line 612
  if (tmp) {
#line 612
    tmp___0 = 0;
  } else {
#line 612
    tmp___0 = 1;
  }
   512: /* CIL Label */ 
#line 612
  buffer_first_field = (_Bool )((int )suppress_non_delimited ^ tmp___0);
   513: /* CIL Label */ 
#line 614
  while (1) {
#line 616
    if (field_idx == 1UL) {
#line 616
      if (buffer_first_field) {
#line 622
        len = getndelim2(& field_1_buffer, & field_1_bufsize, 0UL, 4294967295UL,
                         (int )delim, '\n', stream);
#line 624
        if (len < 0L) {
#line 626
          free((void *)field_1_buffer);
#line 627
          field_1_buffer = (char *)((void *)0);
#line 628
          tmp___1 = ferror_unlocked(stream);
#line 628
          if (tmp___1) {
#line 629
            break;
          } else {
#line 628
            tmp___2 = feof_unlocked(stream);
#line 628
            if (tmp___2) {
#line 629
              break;
            } else {

            }
          }
#line 630
          xalloc_die();
        } else {

        }
#line 633
        n_bytes = (unsigned long )len;
#line 634
        if (! (n_bytes != 0UL)) {
#line 634
          __assert_fail("n_bytes != 0", "src/cut.c", 634U, "cut_fields");
        } else {

        }
#line 636
        c = 0;
#line 637
        got_line = (_Bool )((int )*(field_1_buffer + (n_bytes - 1UL)) == 10);
#line 642
        tmp___3 = to_uchar(*(field_1_buffer + (n_bytes - 1UL)));
#line 642
        if ((int )tmp___3 != (int )delim) {
          goto _L___0;
        } else {
#line 642
          if (got_line) {
            _L___0: 
#line 644
            if (suppress_non_delimited) {
#line 644
              if (got_line) {
#line 644
                if ((int )delim == 10) {
                  goto _L;
                } else {

                }
              } else {

              }
            } else {
              _L: 
#line 650
              fwrite_unlocked((void const   */* __restrict  */)field_1_buffer,
                              sizeof(char ), n_bytes,
                              (FILE */* __restrict  */)stdout);
#line 652
              if (! got_line) {
#line 653
                putchar_unlocked('\n');
              } else {

              }
#line 654
              c = '\n';
            }
#line 656
            continue;
          } else {

          }
        }
#line 658
        tmp___4 = print_kth(1UL, (_Bool *)((void *)0));
#line 658
        if (tmp___4) {
#line 661
          fwrite_unlocked((void const   */* __restrict  */)field_1_buffer,
                          sizeof(char ), n_bytes - 1UL,
                          (FILE */* __restrict  */)stdout);
#line 662
          found_any_selected_field = (_Bool)1;
        } else {

        }
#line 664
        field_idx ++;
      } else {

      }
    } else {

    }
#line 667
    prev_c = c;
#line 669
    tmp___5 = print_kth(field_idx, (_Bool *)((void *)0));
#line 669
    if (tmp___5) {
#line 671
      if (found_any_selected_field) {
#line 673
        fwrite_unlocked((void const   */* __restrict  */)output_delimiter_string,
                        sizeof(char ), output_delimiter_length,
                        (FILE */* __restrict  */)stdout);
      } else {

      }
#line 676
      found_any_selected_field = (_Bool)1;
#line 678
      while (1) {
#line 678
        c = getc_unlocked(stream);
#line 678
        if (c != (int )delim) {
#line 678
          if (c != 10) {
#line 678
            if (! (c != -1)) {
#line 678
              break;
            } else {

            }
          } else {
#line 678
            break;
          }
        } else {
#line 678
          break;
        }
#line 680
        putchar_unlocked(c);
#line 681
        prev_c = c;
      }
    } else {
#line 686
      while (1) {
#line 686
        c = getc_unlocked(stream);
#line 686
        if (c != (int )delim) {
#line 686
          if (c != 10) {
#line 686
            if (! (c != -1)) {
#line 686
              break;
            } else {

            }
          } else {
#line 686
            break;
          }
        } else {
#line 686
          break;
        }
#line 688
        prev_c = c;
      }
    }
#line 692
    if (c == 10) {
      goto _L___3;
    } else {
#line 692
      if (c == -1) {
        _L___3: 
#line 694
        if (found_any_selected_field) {
          goto _L___2;
        } else {
#line 694
          if (suppress_non_delimited) {
#line 694
            if (! (field_idx == 1UL)) {
              goto _L___2;
            } else {

            }
          } else {
            _L___2: 
#line 697
            if (c == 10) {
#line 698
              putchar_unlocked('\n');
            } else {
#line 697
              if (prev_c != 10) {
#line 698
                putchar_unlocked('\n');
              } else {

              }
            }
          }
        }
#line 700
        if (c == -1) {
#line 701
          break;
        } else {

        }
#line 702
        field_idx = 1UL;
#line 703
        found_any_selected_field = (_Bool)0;
      } else {
#line 705
        if (c == (int )delim) {
#line 706
          field_idx ++;
        } else {

        }
      }
    }
  }
   514: /* CIL Label */ 
#line 708
  return;
}
}

cilRep: liveness failure for cut_fields: Errormsg.Error
cilRep: computed liveness
cilrep: from_source: post: stmt_count: 672
faultLocRep: compute_localization: fault_scheme: path, fix_scheme: default
Rep: coverage_sourcename: /home/ubuntu/corebench/coreutils/coreutils-case-ec48bead-be7932e8/coverage/coverage.c
cilRep: instrumenting for fault localization
cilRep: done instrumenting for fault localization
coverage negative:
	test: 1
calling:timeout -k 60s 50 /home/ubuntu/corebench/subjects/coreutils/tests/ec48bead_be7932e8/regression.sh /home/ubuntu/corebench/coreutils/coreutils-case-ec48bead-be7932e8
FAILED:0
coverage positive:
	test: 1
PASS:2
	test: 2
PASS:3
	test: 3
PASS:4
	test: 4
PASS:5
	test: 5
PASS:6
	test: 6
PASS:7
	test: 7
PASS:9
	test: 8
PASS:10
	test: 9
PASS:12
	test: 10
PASS:13
	test: 11
PASS:14
	test: 12
PASS:15
	test: 13
PASS:16
	test: 14
PASS:17
	test: 15
PASS:18
	test: 16
PASS:20
	test: 17
PASS:21
	test: 18
PASS:22
	test: 19
PASS:24
	test: 20
PASS:26
	test: 21
PASS:27
	test: 22
PASS:28
	test: 23
PASS:29
	test: 24
PASS:30
	test: 25
PASS:31
	test: 26
PASS:32
	test: 27
PASS:34
	test: 28
PASS:38
	test: 29
PASS:39
	test: 30
PASS:40
	test: 31
PASS:41
cilRep: default.cache: saved
cachingRep: default.cache: saved
faultlocRep: default.cache: saved
cilrep done serialize
cilRep: stmt_count = 672
cilRep: stmts in weighted_path = 96
cilRep: total weight = 96
cilRep: stmts in weighted_path with weight >= 1.0 = 96
cilRep: src/cut.c (code bank/base file; atoms [1,672])
cilRep: 1 file(s) total in representation
search: ww_adaptive_1 begins (time = 1454387266.648254)
cilRep: coverage ignores: /usr/lib/gcc/x86_64-linux-gnu/4.8/include
cilRep: coverage ignores: /usr/local/include
cilRep: coverage ignores: /usr/lib/gcc/x86_64-linux-gnu/4.8/include-fixed
cilRep: coverage ignores: /usr/include
cilRep: atoms in standard headers: 0
cilRep: fix-space quotient by string: 96 -> 83
progeq: computing alias analysis information
progeq: WARNING: cannot resolve call: xalloc_die
progeq: WARNING: cannot resolve call: xmalloc
progeq: WARNING: cannot resolve call: xrealloc
progeq: WARNING: cannot resolve call: fchownat
progeq: WARNING: cannot resolve call: fchmodat
progeq: WARNING: cannot resolve call: fstatat
progeq: WARNING: cannot resolve call: gettext
progeq: WARNING: cannot resolve call: fputs_unlocked
progeq: WARNING: cannot resolve call: last_component
progeq: WARNING: cannot resolve call: setlocale
progeq: WARNING: cannot resolve call: hash_insert
progeq: WARNING: cannot resolve call: __assert_fail
progeq: WARNING: cannot resolve call: hash_lookup
progeq: WARNING: cannot resolve call: error
progeq: WARNING: cannot resolve call: xstrndup
progeq: WARNING: cannot resolve call: quote
progeq: WARNING: cannot resolve call: free
progeq: WARNING: cannot resolve call: xzalloc
progeq: WARNING: cannot resolve call: qsort
progeq: WARNING: cannot resolve call: getc_unlocked
progeq: WARNING: cannot resolve call: putchar_unlocked
progeq: WARNING: cannot resolve call: fwrite_unlocked
progeq: WARNING: cannot resolve call: getndelim2
progeq: WARNING: cannot resolve call: ferror_unlocked
progeq: WARNING: cannot resolve call: feof_unlocked
progeq: WARNING: cannot resolve call: __errno_location
progeq: WARNING: cannot resolve call: fadvise
progeq: WARNING: cannot resolve call: clearerr_unlocked
progeq: WARNING: cannot resolve call: rpl_fclose
progeq: WARNING: cannot resolve call: set_program_name
progeq: WARNING: cannot resolve call: bindtextdomain
progeq: WARNING: cannot resolve call: textdomain
progeq: WARNING: cannot resolve call: getopt_long
progeq: WARNING: cannot resolve call: xstrdup
progeq: WARNING: cannot resolve call: version_etc
progeq: WARNING: cannot resolve call: hash_initialize
progeq: WARNING: cannot resolve call: hash_free
search: fix space reduced (time_taken = 0.885534)
excluded 0 deletes (from list of 0 total edits)
search: ww_adaptive: 96 deletes
CARDINAL?before:1:after1
REMOVED?true
CARDINAL?before:83:after83
REMOVED?true
CARDINAL?before:83:after83
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:83:after83
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:83:after83
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:83:after83
REMOVED?true
CARDINAL?before:83:after83
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:55:after55
REMOVED?true
CARDINAL?before:83:after83
REMOVED?true
CARDINAL?before:83:after83
REMOVED?true
CARDINAL?before:27:after27
REMOVED?true
CARDINAL?before:27:after27
REMOVED?true
CARDINAL?before:82:after82
REMOVED?true
CARDINAL?before:27:after27
REMOVED?true
CARDINAL?before:27:after27
REMOVED?true
CARDINAL?before:82:after82
REMOVED?true
CARDINAL?before:27:after27
REMOVED?true
CARDINAL?before:27:after27
REMOVED?true
CARDINAL?before:83:after83
REMOVED?true
CARDINAL?before:83:after83
REMOVED?true
CARDINAL?before:83:after83
REMOVED?true
CARDINAL?before:83:after83
REMOVED?true
CARDINAL?before:82:after82
REMOVED?true
CARDINAL?before:82:after82
REMOVED?true
CARDINAL?before:27:after27
REMOVED?true
CARDINAL?before:27:after27
REMOVED?true
CARDINAL?before:27:after27
REMOVED?true
CARDINAL?before:82:after82
REMOVED?true
CARDINAL?before:82:after82
REMOVED?true
CARDINAL?before:82:after82
REMOVED?true
CARDINAL?before:82:after82
REMOVED?true
CARDINAL?before:82:after82
REMOVED?true
CARDINAL?before:82:after82
REMOVED?true
CARDINAL?before:82:after82
REMOVED?true
CARDINAL?before:82:after82
REMOVED?true
CARDINAL?before:27:after27
REMOVED?true
CARDINAL?before:27:after27
REMOVED?true
CARDINAL?before:27:after27
REMOVED?true
CARDINAL?before:27:after27
REMOVED?true
CARDINAL?before:82:after82
REMOVED?true
CARDINAL?before:27:after27
REMOVED?true
excluded 0 deletes (from list of 0 total edits)
search: ww_adaptive: 5521 appends
excluded 0 appends (from list of 0 total edits)
search: ww_adaptive: 3489 appends
search: ww_adaptive: 9010 possible edits
search: ready to start (time_taken = 3.18808)
search: ww_adaptive: finding best
rep: WARNING: test_visiting_atoms: no data available
	try using --coverage-per-test and/or --regen-paths
	defaulting to 'all tests'
search: ww_adaptive: found best (time_taken = 0.137371)
	variant     1/ 9010 = d(664)          (32 tests, cond 0)
		n1calling:timeout -k 60s 50 /home/ubuntu/corebench/subjects/coreutils/tests/ec48bead_be7932e8/regression.sh /home/ubuntu/corebench/coreutils/coreutils-case-ec48bead-be7932e8
FAILED:0
 false (test_time = 1.74342)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.135985)
	variant     2/ 9010 = d(663)          (32 tests, cond 0)
		n1calling:timeout -k 60s 50 /home/ubuntu/corebench/subjects/coreutils/tests/ec48bead_be7932e8/regression.sh /home/ubuntu/corebench/coreutils/coreutils-case-ec48bead-be7932e8
FAILED:0
 false (test_time = 1.64313)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.163919)
	variant     3/ 9010 = d(662)          (32 tests, cond 0)
		n1calling:timeout -k 60s 50 /home/ubuntu/corebench/subjects/coreutils/tests/ec48bead_be7932e8/regression.sh /home/ubuntu/corebench/coreutils/coreutils-case-ec48bead-be7932e8
FAILED:0
 false (test_time = 1.74772)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.170767)
	variant     4/ 9010 = d(661)          (32 tests, cond 0)
		n1calling:timeout -k 60s 50 /home/ubuntu/corebench/subjects/coreutils/tests/ec48bead_be7932e8/regression.sh /home/ubuntu/corebench/coreutils/coreutils-case-ec48bead-be7932e8
FAILED:0
 false (test_time = 1.57352)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.136195)
	variant     5/ 9010 = d(660)          (32 tests, cond 0)
		n1calling:timeout -k 60s 50 /home/ubuntu/corebench/subjects/coreutils/tests/ec48bead_be7932e8/regression.sh /home/ubuntu/corebench/coreutils/coreutils-case-ec48bead-be7932e8
FAILED:0
 false (test_time = 1.83629)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.139443)
	variant     6/ 9010 = d(659)          (32 tests, cond 0)
		n1	/home/ubuntu/corebench/coreutils/coreutils-case-ec48bead-be7932e8/000005/src/cut.c  d(659)  fails to compile
 false (test_time = 1.30971)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.135196)
	variant     7/ 9010 = d(658)          (32 tests, cond 0)
		n1calling:timeout -k 60s 50 /home/ubuntu/corebench/subjects/coreutils/tests/ec48bead_be7932e8/regression.sh /home/ubuntu/corebench/coreutils/coreutils-case-ec48bead-be7932e8
FAILED:0
 false (test_time = 1.61994)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.132269)
	variant     8/ 9010 = d(657)          (32 tests, cond 0)
		n1calling:timeout -k 60s 50 /home/ubuntu/corebench/subjects/coreutils/tests/ec48bead_be7932e8/regression.sh /home/ubuntu/corebench/coreutils/coreutils-case-ec48bead-be7932e8
FAILED:0
 false (test_time = 1.53277)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.130114)
	variant     9/ 9010 = d(656)          (32 tests, cond 0)
		n1calling:timeout -k 60s 50 /home/ubuntu/corebench/subjects/coreutils/tests/ec48bead_be7932e8/regression.sh /home/ubuntu/corebench/coreutils/coreutils-case-ec48bead-be7932e8
FAILED:0
 false (test_time = 1.79878)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.155775)
	variant    10/ 9010 = d(655)          (32 tests, cond 0)
		n1calling:timeout -k 60s 50 /home/ubuntu/corebench/subjects/coreutils/tests/ec48bead_be7932e8/regression.sh /home/ubuntu/corebench/coreutils/coreutils-case-ec48bead-be7932e8
FAILED:0
 false (test_time = 1.70307)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.160455)
	variant    11/ 9010 = d(654)          (32 tests, cond 0)
		n1calling:timeout -k 60s 50 /home/ubuntu/corebench/subjects/coreutils/tests/ec48bead_be7932e8/regression.sh /home/ubuntu/corebench/coreutils/coreutils-case-ec48bead-be7932e8
FAILED:0
 false (test_time = 1.86253)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.158049)
	variant    12/ 9010 = d(653)          (32 tests, cond 0)
		n1calling:timeout -k 60s 50 /home/ubuntu/corebench/subjects/coreutils/tests/ec48bead_be7932e8/regression.sh /home/ubuntu/corebench/coreutils/coreutils-case-ec48bead-be7932e8
FAILED:0
 false (test_time = 1.79598)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.137228)
	variant    13/ 9010 = d(652)          (32 tests, cond 0)
		n1calling:timeout -k 60s 50 /home/ubuntu/corebench/subjects/coreutils/tests/ec48bead_be7932e8/regression.sh /home/ubuntu/corebench/coreutils/coreutils-case-ec48bead-be7932e8
FAILED:0
 false (test_time = 1.64309)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.134354)
	variant    14/ 9010 = d(651)          (32 tests, cond 0)
		n1calling:timeout -k 60s 50 /home/ubuntu/corebench/subjects/coreutils/tests/ec48bead_be7932e8/regression.sh /home/ubuntu/corebench/coreutils/coreutils-case-ec48bead-be7932e8
FAILED:0
 false (test_time = 1.59993)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.135261)
	variant    15/ 9010 = d(650)          (32 tests, cond 0)
		n1	/home/ubuntu/corebench/coreutils/coreutils-case-ec48bead-be7932e8/000014/src/cut.c  d(650)  fails to compile
 false (test_time = 1.59343)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.158189)
	variant    16/ 9010 = d(649)          (32 tests, cond 0)
		n1calling:timeout -k 60s 50 /home/ubuntu/corebench/subjects/coreutils/tests/ec48bead_be7932e8/regression.sh /home/ubuntu/corebench/coreutils/coreutils-case-ec48bead-be7932e8
FAILED:0
 false (test_time = 1.72952)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.165224)
	variant    17/ 9010 = d(648)          (32 tests, cond 0)
		n1calling:timeout -k 60s 50 /home/ubuntu/corebench/subjects/coreutils/tests/ec48bead_be7932e8/regression.sh /home/ubuntu/corebench/coreutils/coreutils-case-ec48bead-be7932e8
FAILED:0
 false (test_time = 1.63375)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.148139)
	variant    18/ 9010 = d(610)          (32 tests, cond 0)
		n1calling:timeout -k 60s 50 /home/ubuntu/corebench/subjects/coreutils/tests/ec48bead_be7932e8/regression.sh /home/ubuntu/corebench/coreutils/coreutils-case-ec48bead-be7932e8
FAILED:0
 false (test_time = 1.76419)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.152641)
	variant    19/ 9010 = d(609)          (32 tests, cond 0)
		n1calling:timeout -k 60s 50 /home/ubuntu/corebench/subjects/coreutils/tests/ec48bead_be7932e8/regression.sh /home/ubuntu/corebench/coreutils/coreutils-case-ec48bead-be7932e8
FAILED:0
 false (test_time = 1.69288)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.132298)
	variant    20/ 9010 = d(587)          (32 tests, cond 0)
		n1calling:timeout -k 60s 50 /home/ubuntu/corebench/subjects/coreutils/tests/ec48bead_be7932e8/regression.sh /home/ubuntu/corebench/coreutils/coreutils-case-ec48bead-be7932e8
FAILED:0
 false (test_time = 1.59309)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.126669)
	variant    21/ 9010 = d(586)          (32 tests, cond 0)
		n1	/home/ubuntu/corebench/coreutils/coreutils-case-ec48bead-be7932e8/000020/src/cut.c  d(586)  fails to compile
 false (test_time = 1.61194)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.151326)
	variant    22/ 9010 = d(579)          (32 tests, cond 0)
		n1calling:timeout -k 60s 50 /home/ubuntu/corebench/subjects/coreutils/tests/ec48bead_be7932e8/regression.sh /home/ubuntu/corebench/coreutils/coreutils-case-ec48bead-be7932e8
FAILED:0
 false (test_time = 2.01948)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.158693)
	variant    23/ 9010 = d(578)          (32 tests, cond 0)
		n1calling:timeout -k 60s 50 /home/ubuntu/corebench/subjects/coreutils/tests/ec48bead_be7932e8/regression.sh /home/ubuntu/corebench/coreutils/coreutils-case-ec48bead-be7932e8
FAILED:0
 false (test_time = 1.74193)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.172315)
	variant    24/ 9010 = d(570)          (32 tests, cond 0)
		n1calling:timeout -k 60s 50 /home/ubuntu/corebench/subjects/coreutils/tests/ec48bead_be7932e8/regression.sh /home/ubuntu/corebench/coreutils/coreutils-case-ec48bead-be7932e8
FAILED:0
 false (test_time = 1.76201)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.155532)
	variant    25/ 9010 = d(569)          (32 tests, cond 0)
		n1calling:timeout -k 60s 50 /home/ubuntu/corebench/subjects/coreutils/tests/ec48bead_be7932e8/regression.sh /home/ubuntu/corebench/coreutils/coreutils-case-ec48bead-be7932e8
FAILED:0
 false (test_time = 1.75173)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.15331)
	variant    26/ 9010 = d(567)          (32 tests, cond 0)
		n1calling:timeout -k 60s 50 /home/ubuntu/corebench/subjects/coreutils/tests/ec48bead_be7932e8/regression.sh /home/ubuntu/corebench/coreutils/coreutils-case-ec48bead-be7932e8
FAILED:0
 false (test_time = 1.72697)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.127821)
	variant    27/ 9010 = d(566)          (32 tests, cond 0)
		n1calling:timeout -k 60s 50 /home/ubuntu/corebench/subjects/coreutils/tests/ec48bead_be7932e8/regression.sh /home/ubuntu/corebench/coreutils/coreutils-case-ec48bead-be7932e8
FAILED:0
 false (test_time = 1.73522)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.122581)
	variant    28/ 9010 = d(373)          (32 tests, cond 0)
		n1calling:timeout -k 60s 50 /home/ubuntu/corebench/subjects/coreutils/tests/ec48bead_be7932e8/regression.sh /home/ubuntu/corebench/coreutils/coreutils-case-ec48bead-be7932e8
FAILED:0
 false (test_time = 1.80151)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.120673)
	variant    29/ 9010 = d(372)          (32 tests, cond 0)
		n1calling:timeout -k 60s 50 /home/ubuntu/corebench/subjects/coreutils/tests/ec48bead_be7932e8/regression.sh /home/ubuntu/corebench/coreutils/coreutils-case-ec48bead-be7932e8
FAILED:0
 false (test_time = 1.6883)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.12248)
	variant    30/ 9010 = d(371)          (32 tests, cond 0)
		n1calling:timeout -k 60s 50 /home/ubuntu/corebench/subjects/coreutils/tests/ec48bead_be7932e8/regression.sh /home/ubuntu/corebench/coreutils/coreutils-case-ec48bead-be7932e8
FAILED:0
 false (test_time = 1.58068)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.122161)
	variant    31/ 9010 = d(370)          (32 tests, cond 0)
		n1calling:timeout -k 60s 50 /home/ubuntu/corebench/subjects/coreutils/tests/ec48bead_be7932e8/regression.sh /home/ubuntu/corebench/coreutils/coreutils-case-ec48bead-be7932e8
FAILED:0
 false (test_time = 1.57905)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.119127)
	variant    32/ 9010 = d(369)          (32 tests, cond 0)
		n1calling:timeout -k 60s 50 /home/ubuntu/corebench/subjects/coreutils/tests/ec48bead_be7932e8/regression.sh /home/ubuntu/corebench/coreutils/coreutils-case-ec48bead-be7932e8
FAILED:0
 false (test_time = 1.66776)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.117508)
	variant    33/ 9010 = d(368)          (32 tests, cond 0)
		n1calling:timeout -k 60s 50 /home/ubuntu/corebench/subjects/coreutils/tests/ec48bead_be7932e8/regression.sh /home/ubuntu/corebench/coreutils/coreutils-case-ec48bead-be7932e8
FAILED:0
 false (test_time = 1.59391)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.113226)
	variant    34/ 9010 = d(367)          (32 tests, cond 0)
		n1calling:timeout -k 60s 50 /home/ubuntu/corebench/subjects/coreutils/tests/ec48bead_be7932e8/regression.sh /home/ubuntu/corebench/coreutils/coreutils-case-ec48bead-be7932e8
FAILED:0
 false (test_time = 1.87826)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.117947)
	variant    35/ 9010 = d(366)          (32 tests, cond 0)
		n1calling:timeout -k 60s 50 /home/ubuntu/corebench/subjects/coreutils/tests/ec48bead_be7932e8/regression.sh /home/ubuntu/corebench/coreutils/coreutils-case-ec48bead-be7932e8
FAILED:0
 false (test_time = 1.85722)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.130384)
	variant    36/ 9010 = d(363)          (32 tests, cond 0)
		n1calling:timeout -k 60s 50 /home/ubuntu/corebench/subjects/coreutils/tests/ec48bead_be7932e8/regression.sh /home/ubuntu/corebench/coreutils/coreutils-case-ec48bead-be7932e8
FAILED:0
 false (test_time = 1.7194)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.13055)
	variant    37/ 9010 = d(318)          (32 tests, cond 0)
		n1 false (test_time = 31.6915)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.147781)
	variant    38/ 9010 = d(317)          (32 tests, cond 0)
		n1 false (test_time = 32.054)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.11241)
	variant    39/ 9010 = d(316)          (32 tests, cond 0)
		n1	/home/ubuntu/corebench/coreutils/coreutils-case-ec48bead-be7932e8/000038/src/cut.c  d(316)  fails to compile
 false (test_time = 1.02363)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.110743)
	variant    40/ 9010 = d(315)          (32 tests, cond 0)
		n1calling:timeout -k 60s 50 /home/ubuntu/corebench/subjects/coreutils/tests/ec48bead_be7932e8/regression.sh /home/ubuntu/corebench/coreutils/coreutils-case-ec48bead-be7932e8
FAILED:0
 false (test_time = 1.54532)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.120521)
	variant    41/ 9010 = d(314)          (32 tests, cond 0)
		n1calling:timeout -k 60s 50 /home/ubuntu/corebench/subjects/coreutils/tests/ec48bead_be7932e8/regression.sh /home/ubuntu/corebench/coreutils/coreutils-case-ec48bead-be7932e8
FAILED:0
 false (test_time = 1.54453)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.10818)
	variant    42/ 9010 = d(313)          (32 tests, cond 0)
		n1	/home/ubuntu/corebench/coreutils/coreutils-case-ec48bead-be7932e8/000041/src/cut.c  d(313)  fails to compile
 false (test_time = 1.23848)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.102956)
	variant    43/ 9010 = d(312)          (32 tests, cond 0)
		n1 false (test_time = 31.5986)
search: ww_adaptive: finding best
search: ww_adaptive: found best (time_taken = 0.105481)
	variant    44/ 9010 = d(306)          (32 tests, cond 0)
		n1calling:timeout -k 60s 50 /home/ubuntu/corebench/subjects/coreutils/tests/ec48bead_be7932e8/regression.sh /home/ubuntu/corebench/coreutils/coreutils-case-ec48bead-be7932e8
line:''
PASS:0
 true (test_time = 2.03313)
		p1PASS:2
 true (test_time = 1.89559)
		p2PASS:3
 true (test_time = 1.8831)
		p3PASS:4
 true (test_time = 1.87749)
		p4PASS:5
 true (test_time = 2.6647)
		p5PASS:6
 true (test_time = 1.91266)
		p6PASS:7
 true (test_time = 1.96263)
		p7PASS:9
 true (test_time = 4.64273)
		p8PASS:10
 true (test_time = 4.86465)
		p9PASS:12
 true (test_time = 1.98119)
		p10PASS:13
 true (test_time = 1.90686)
		p11PASS:14
 true (test_time = 1.76322)
		p12PASS:15
 true (test_time = 1.68107)
		p13PASS:16
 true (test_time = 1.75873)
		p14PASS:17
 true (test_time = 1.70892)
		p15PASS:18
 true (test_time = 1.71308)
		p16PASS:20
 true (test_time = 1.93564)
		p17PASS:21
 true (test_time = 1.69059)
		p18PASS:22
 true (test_time = 1.79315)
		p19PASS:24
 true (test_time = 1.72017)
		p20PASS:26
 true (test_time = 1.67004)
		p21PASS:27
 true (test_time = 1.81265)
		p22PASS:28
 true (test_time = 1.76618)
		p23PASS:29
 true (test_time = 1.56328)
		p24PASS:30
 true (test_time = 1.57844)
		p25PASS:31
 true (test_time = 1.56903)
		p26PASS:32
 true (test_time = 1.69802)
		p27PASS:34
 true (test_time = 1.63032)
		p28PASS:38
 true (test_time = 2.02434)
		p29PASS:39
 true (test_time = 1.84604)
		p30PASS:40
 true (test_time = 1.61954)
		p31PASS:41
 true (test_time = 1.81097)
search: ww_adaptive: ends (yes repair)

Repair Found: d(306)
Repair Name: d(306) 
Test Condition: 0
Test Cases Skipped: ""
Current Time: 1454387502.874156

Variant Test Case Queries: 75
"Test Suite Evaluations": 2.34375

Compile Failures: 5
Wall-Clock Seconds Elapsed: 312.865
  Activity Name                     Count Seconds = Percent of Total Time
  progeq partition                     83   0.771 = 0.247253%
  delete_sources                       96   1.382 = 0.443076%
  append_sources                       96   1.802 = 0.57787%
  find_best_edit                       44   5.989 = 1.92067%
  compile                              45  72.963 = 23.399%
  test                                102 228.914 = 73.4121%
  TOTAL                                   311.820 = 99.6635% (avg CPU usage)
